<style lang="css">
  @import '/zanui/panel.wxss';
  @import '/zanui/cell.wxss';
  @import '/zanui/icon.wxss';
  video {
    width:100%;
  }
</style>

<template>
  <!-- 用户提交预约教师 -->
  <view class="zan-panel">
    <view class="zan-cell" >
      <view class="zan-cell__bd" @tap="locationChoise">{{location}}</view>
      <view class="zan-cell__ft" @tap="toAppointTeacher">绑定教员</view>
    </view>
  </view>
  <view style="margin: 20px 0">
    <zanTab1 :tab.sync="tab1" componentId="tab1"></zanTab1>
  </view>

  <view style="margin:20px 0" wx:if="{{type=='show'}}" wx:key="key">
    <!-- 如果是当前进入的数据 表示为icon-->
    <view class="zan-panel">
      <view class="zan-cell" wx:for="{{teacher.show}}">
        <video src="{{item}}" controls></video>
      </view>
    </view>
  </view>
  <view style="margin:20px 0" wx:if="{{type=='student'}}">
    <!-- 如果是当前进入的数据 表示为icon-->
    <view class="zan-panel">
      <view class="zan-cell" wx:for="{{teacher.studentVideo}}" wx:key="key">
        <video src="{{item}}" controls></video>
      </view>

    </view>
  </view>
  <view style="margin:20px 0" wx:if="{{type=='course'}}">
    <!-- 如果是当前进入的数据 表示为icon-->
    <zanLoadmore :nodata="_true" nodata_str="暂未开放"></zanLoadmore>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import AV from '../libs/av-weapp-min'
  import zanLoadmore from '../components/zan-loadmore'
  import zanTab from '../components/zan-tab'
//   教师先去界面;

  export default class StarTeacherInfo  extends wepy.page {
    config = {
      navigationBarTitleText: '教员详情'
    }
    components = {
      zanTab1: zanTab,
      zanLoadmore
    }
    data = {
      teacher:null,
      _true:true,
      location:'定位失败',
      objectId:null,
      type: 'show',
      tab1: {
        list:[
          {
            id:'show',
            title:'展示'
          },{
            id:'student',
            title:'学员'
          },{
            id:'course',
            title:'课程'
          }
        ],
        selectedId: 'show',
        scroll: false
      }
    }
    events = {
      zanTabChange(selectedId, event) {
        var self = this;
        let {componentId} = event.source
        this[componentId].selectedId = selectedId
        // 当前tab切换的时候
        self.type=selectedId;

        this.$apply()
      }
    }
    methods = {

      // 点击展示其他的页面 tab
      toAppointTeacher() {
        // 打印出这个id
        console.log('id' + this.objectId);
        var url = "/pages/appointteacher?id=" + this.objectId;
        wx.navigateTo({
          url: url,
        })
      },
      locationChoise() {
        const self = this;
        // 开始获取当前的地理位置 ak=67d28f499072d22dba8a978e2431794f;
        wx.chooseLocation({
          success: function (res) {
            // success
            console.log(res.name)
            self.location = res.name;
            self.$apply();
          },
          fail: function () {
            // 定位失败;

          },
          complete: function () {
            // complete
          }
        })
      }
    }
    onLoad(options) {
      // 获取当前传来的参数
      var self = this;
      var id = options.id;
      // 当前这位教师的id
      //需要展示当前这位老师的一些个人风采消息;
      self.objectId = id;

      // 获取当前的老师的详细信息;
      var queryTeachers = new AV.Query('Teachers');
      queryTeachers.get(id).then(function (res) {
        // 成功获得实例
        self.teacher = res;
        self.$apply();
      }, function (error) {
        // 异常处理
      });
      // 开始获取当前的地理位置 ak=67d28f499072d22dba8a978e2431794f;
      wx.chooseLocation({
        success: function (res) {
          // success
          console.log(res.name)
          self.location = res.name;
          self.$apply();
        },
        fail: function () {
          // 定位失败;

        },
        complete: function () {
          // complete
        }
      })

    }
  }
</script>
